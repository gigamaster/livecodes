{
  "version": 3,
  "sources": ["../../src/livecodes/editor/monaco/languages/monaco-lang-wat.ts"],
  "sourcesContent": ["// 'WebAssembly Text Format' Monarch language\r\n// from https://github.com/AssemblyScript/website/blob/main/src/.vuepress/public/scripts/wat.js\r\nexport default {\r\n  config: {\r\n    brackets: [\r\n      ['(', ')'],\r\n      ['if', 'end'],\r\n      ['loop', 'end'],\r\n      ['block', 'end'],\r\n    ],\r\n    autoClosingPairs: [\r\n      { open: '(', close: ')' },\r\n      { open: 'if', close: 'end' },\r\n      { open: 'loop', close: 'end' },\r\n      { open: 'block', close: 'end' },\r\n    ],\r\n    surroundingPairs: [\r\n      { open: '(', close: ')' },\r\n      { open: 'if', close: 'end' },\r\n      { open: 'loop', close: 'end' },\r\n      { open: 'block', close: 'end' },\r\n    ],\r\n  },\r\n  tokens: {\r\n    keywords: [\r\n      'module',\r\n      'import',\r\n      'export',\r\n      'memory',\r\n      'data',\r\n      'table',\r\n      'elem',\r\n      'start',\r\n      'func',\r\n      'tag',\r\n      'type',\r\n      'param',\r\n      'result',\r\n      'global',\r\n      'local',\r\n      'mut',\r\n      'struct',\r\n      'array',\r\n      'field',\r\n    ],\r\n    types: [\r\n      'i8',\r\n      'i16',\r\n      'i32',\r\n      'i64',\r\n      'f32',\r\n      'f64',\r\n      'v128',\r\n      'i31ref',\r\n      'eqref',\r\n      'anyref',\r\n      'dataref',\r\n      'externref',\r\n      'funcref',\r\n      'exnref',\r\n      'extern',\r\n      'null',\r\n      'any',\r\n      'eq',\r\n    ],\r\n    instructions: [\r\n      'pop',\r\n      'nop',\r\n      'drop',\r\n      'data.drop',\r\n      'elem.drop',\r\n      'local.get',\r\n      'local.set',\r\n      'local.tee',\r\n      'global.get',\r\n      'global.set',\r\n      'tuple.make',\r\n      'tuple.extract',\r\n      'select',\r\n      'v128.const',\r\n      'v128.and',\r\n      'v128.or',\r\n      'v128.xor',\r\n      'v128.not',\r\n      'v128.andnot',\r\n      'v128.bitselect',\r\n      'v128.load',\r\n      'v128.load8x8_s',\r\n      'v128.load8x8_u',\r\n      'v128.load16x4_s',\r\n      'v128.load16x4_u',\r\n      'v128.load32x2_s',\r\n      'v128.load32x2_u',\r\n      'v128.load8_lane',\r\n      'v128.load16_lane',\r\n      'v128.load32_lane',\r\n      'v128.load64_lane',\r\n      'v128.load8_splat',\r\n      'v128.load16_splat',\r\n      'v128.load32_splat',\r\n      'v128.load64_splat',\r\n      'v128.load32_zero',\r\n      'v128.load64_zero',\r\n      'v128.store',\r\n      'v128.store8_lane',\r\n      'v128.store16_lane',\r\n      'v128.store32_lane',\r\n      'v128.store64_lane',\r\n      'v128.any_true',\r\n      'i8x16.shuffle',\r\n      'i8x16.swizzle',\r\n      'i8x16.bitmask',\r\n      'i8x16.splat',\r\n      'i8x16.popcnt',\r\n      'i8x16.replace_lane',\r\n      'i8x16.extract_lane_s',\r\n      'i8x16.extract_lane_u',\r\n      'i8x16.all_true',\r\n      'i8x16.abs',\r\n      'i8x16.add',\r\n      'i8x16.add_sat_s',\r\n      'i8x16.add_sat_u',\r\n      'i8x16.sub',\r\n      'i8x16.sub_sat_s',\r\n      'i8x16.sub_sat_u',\r\n      'i8x16.mul',\r\n      'i8x16.neg',\r\n      'i8x16.shl',\r\n      'i8x16.shr_s',\r\n      'i8x16.shr_u',\r\n      'i8x16.eq',\r\n      'i8x16.ne',\r\n      'i8x16.lt_s',\r\n      'i8x16.lt_u',\r\n      'i8x16.le_s',\r\n      'i8x16.le_u',\r\n      'i8x16.gt_s',\r\n      'i8x16.gt_u',\r\n      'i8x16.ge_s',\r\n      'i8x16.ge_u',\r\n      'i8x16.min_s',\r\n      'i8x16.min_u',\r\n      'i8x16.max_s',\r\n      'i8x16.max_u',\r\n      'i8x16.avgr_u',\r\n      'i8x16.narrow_i16x8_s',\r\n      'i8x16.narrow_i16x8_u',\r\n      'i16x8.bitmask',\r\n      'i16x8.splat',\r\n      'i16x8.load_8x8_s',\r\n      'i16x8.load_8x8_u',\r\n      'i16x8.replace_lane',\r\n      'i16x8.extract_lane_s',\r\n      'i16x8.extract_lane_u',\r\n      'i16x8.extend_low_i8x16_s',\r\n      'i16x8.extend_high_i8x16_s',\r\n      'i16x8.extend_low_i8x16_u',\r\n      'i16x8.extend_high_i8x16_u',\r\n      'i16x8.all_true',\r\n      'i16x8.abs',\r\n      'i16x8.add',\r\n      'i16x8.add_sat_s',\r\n      'i16x8.add_sat_u',\r\n      'i16x8.extadd_pairwise_i8x16_s',\r\n      'i16x8.extadd_pairwise_i8x16_u',\r\n      'i16x8.sub',\r\n      'i16x8.sub_sat_s',\r\n      'i16x8.sub_sat_u',\r\n      'i16x8.q15mulr_sat_s',\r\n      'i16x8.mul',\r\n      'i16x8.extmul_low_i8x16_s',\r\n      'i16x8.extmul_high_i8x16_s',\r\n      'i16x8.extmul_low_i8x16_u',\r\n      'i16x8.extmul_high_i8x16_u',\r\n      'i16x8.neg',\r\n      'i16x8.shl',\r\n      'i16x8.shr_s',\r\n      'i16x8.shr_u',\r\n      'i16x8.eq',\r\n      'i16x8.ne',\r\n      'i16x8.lt_s',\r\n      'i16x8.lt_u',\r\n      'i16x8.le_s',\r\n      'i16x8.le_u',\r\n      'i16x8.gt_s',\r\n      'i16x8.gt_u',\r\n      'i16x8.ge_s',\r\n      'i16x8.ge_u',\r\n      'i16x8.min_s',\r\n      'i16x8.min_u',\r\n      'i16x8.max_s',\r\n      'i16x8.max_u',\r\n      'i16x8.avgr_u',\r\n      'i16x8.narrow_i32x4_s',\r\n      'i16x8.narrow_i32x4_u',\r\n      'i32x4.bitmask',\r\n      'i32x4.splat',\r\n      'i32x4.load_16x4_s',\r\n      'i32x4.load_16x4_u',\r\n      'i32x4.replace_lane',\r\n      'i32x4.extract_lane',\r\n      'i32x4.extend_low_i16x8_s',\r\n      'i32x4.extend_high_i16x8_s',\r\n      'i32x4.extend_low_i16x8_u',\r\n      'i32x4.extend_high_i16x8_u',\r\n      'i32x4.all_true',\r\n      'i32x4.abs',\r\n      'i32x4.add',\r\n      'i32x4.extadd_pairwise_i16x8_s',\r\n      'i32x4.extadd_pairwise_i16x8_u',\r\n      'i32x4.sub',\r\n      'i32x4.mul',\r\n      'i32x4.extmul_low_i16x8_s',\r\n      'i32x4.extmul_high_i16x8_s',\r\n      'i32x4.extmul_low_i16x8_u',\r\n      'i32x4.extmul_high_i16x8_u',\r\n      'i32x4.neg',\r\n      'i32x4.shl',\r\n      'i32x4.shr_s',\r\n      'i32x4.shr_u',\r\n      'i32x4.eq',\r\n      'i32x4.ne',\r\n      'i32x4.lt_s',\r\n      'i32x4.lt_u',\r\n      'i32x4.le_s',\r\n      'i32x4.le_u',\r\n      'i32x4.gt_s',\r\n      'i32x4.gt_u',\r\n      'i32x4.ge_s',\r\n      'i32x4.ge_u',\r\n      'i32x4.min_s',\r\n      'i32x4.min_u',\r\n      'i32x4.max_s',\r\n      'i32x4.max_u',\r\n      'i32x4.trunc_sat_f32x4_s',\r\n      'i32x4.trunc_sat_f32x4_u',\r\n      'i32x4.trunc_sat_f64x2_s_zero',\r\n      'i32x4.trunc_sat_f64x2_u_zero',\r\n      'i32x4.dot_i16x8_s',\r\n      'i64x2.bitmask',\r\n      'i64x2.splat',\r\n      'i64x2.load32x2_s',\r\n      'i64x2.load32x2_u',\r\n      'i64x2.replace_lane',\r\n      'i64x2.extract_lane',\r\n      'i64x2.extend_low_i32x4_s',\r\n      'i64x2.extend_high_i32x4_s',\r\n      'i64x2.extend_low_i32x4_u',\r\n      'i64x2.extend_high_i32x4_u',\r\n      'i64x2.all_true',\r\n      'i64x2.abs',\r\n      'i64x2.add',\r\n      'i64x2.sub',\r\n      'i64x2.mul',\r\n      'i64x2.neg',\r\n      'i64x2.shl',\r\n      'i64x2.shr_s',\r\n      'i64x2.shr_u',\r\n      'f32x4.splat',\r\n      'f32x4.replace_lane',\r\n      'f32x4.extract_lane',\r\n      'f32x4.add',\r\n      'f32x4.sub',\r\n      'f32x4.mul',\r\n      'i64x2.extmul_low_i32x4_s',\r\n      'i64x2.extmul_high_i32x4_s',\r\n      'i64x2.extmul_low_i32x4_u',\r\n      'i64x2.extmul_high_i32x4_u',\r\n      'i64x2.eq',\r\n      'i64x2.ne',\r\n      'i64x2.lt_s',\r\n      'i64x2.le_s',\r\n      'i64x2.gt_s',\r\n      'i64x2.ge_s',\r\n      'f32x4.neg',\r\n      'f32x4.eq',\r\n      'f32x4.ne',\r\n      'f32x4.lt',\r\n      'f32x4.le',\r\n      'f32x4.gt',\r\n      'f32x4.ge',\r\n      'f32x4.abs',\r\n      'f32x4.min',\r\n      'f32x4.pmin',\r\n      'f32x4.max',\r\n      'f32x4.pmax',\r\n      'f32x4.div',\r\n      'f32x4.sqrt',\r\n      'f32x4.ceil',\r\n      'f32x4.floor',\r\n      'f32x4.trunc',\r\n      'f32x4.nearest',\r\n      'f32x4.demote_f64x2_zero',\r\n      'f32x4.convert_i32x4_s',\r\n      'f32x4.convert_i32x4_u',\r\n      'f64x2.splat',\r\n      'f64x2.replace_lane',\r\n      'f64x2.extract_lane',\r\n      'f64x2.add',\r\n      'f64x2.sub',\r\n      'f64x2.mul',\r\n      'f64x2.neg',\r\n      'f64x2.eq',\r\n      'f64x2.ne',\r\n      'f64x2.lt',\r\n      'f64x2.le',\r\n      'f64x2.gt',\r\n      'f64x2.ge',\r\n      'f64x2.abs',\r\n      'f64x2.min',\r\n      'f64x2.max',\r\n      'f64x2.pmin',\r\n      'f64x2.pmax',\r\n      'f64x2.div',\r\n      'f64x2.sqrt',\r\n      'f64x2.ceil',\r\n      'f64x2.floor',\r\n      'f64x2.trunc',\r\n      'f64x2.nearest',\r\n      'f64x2.promote_low_f32x4',\r\n      'f64x2.convert_low_i32x4_s',\r\n      'f64x2.convert_low_i32x4_u',\r\n      'i32.atomic.load',\r\n      'i32.atomic.load8_u',\r\n      'i32.atomic.load16_u',\r\n      'i32.atomic.store',\r\n      'i32.atomic.store8',\r\n      'i32.atomic.store16',\r\n      'i32.atomic.rmw.add',\r\n      'i32.atomic.rmw.sub',\r\n      'i32.atomic.rmw.and',\r\n      'i32.atomic.rmw.or',\r\n      'i32.atomic.rmw.xor',\r\n      'i32.atomic.rmw.xchg',\r\n      'i32.atomic.rmw.cmpxchg',\r\n      'i32.atomic.rmw8.add_u',\r\n      'i32.atomic.rmw8.sub_u',\r\n      'i32.atomic.rmw8.and_u',\r\n      'i32.atomic.rmw8.or_u',\r\n      'i32.atomic.rmw8.xor_u',\r\n      'i32.atomic.rmw8.xchg_u',\r\n      'i32.atomic.rmw8.cmpxchg_u',\r\n      'i32.atomic.rmw16.add_u',\r\n      'i32.atomic.rmw16.sub_u',\r\n      'i32.atomic.rmw16.and_u',\r\n      'i32.atomic.rmw16.or_u',\r\n      'i32.atomic.rmw16.xor_u',\r\n      'i32.atomic.rmw16.xchg_u',\r\n      'i32.atomic.rmw16.cmpxchg_u',\r\n      'i64.atomic.load',\r\n      'i64.atomic.load8_u',\r\n      'i64.atomic.load16_u',\r\n      'i64.atomic.load32_u',\r\n      'i64.atomic.store',\r\n      'i64.atomic.store8',\r\n      'i64.atomic.store16',\r\n      'i64.atomic.store32',\r\n      'i64.atomic.rmw.add',\r\n      'i64.atomic.rmw.sub',\r\n      'i64.atomic.rmw.and',\r\n      'i64.atomic.rmw.or',\r\n      'i64.atomic.rmw.xor',\r\n      'i64.atomic.rmw.xchg',\r\n      'i64.atomic.rmw.cmpxchg',\r\n      'i64.atomic.rmw8.add_u',\r\n      'i64.atomic.rmw8.sub_u',\r\n      'i64.atomic.rmw8.and_u',\r\n      'i64.atomic.rmw8.or_u',\r\n      'i64.atomic.rmw8.xor_u',\r\n      'i64.atomic.rmw8.xchg_u',\r\n      'i64.atomic.rmw8.cmpxchg_u',\r\n      'i64.atomic.rmw16.add_u',\r\n      'i64.atomic.rmw16.sub_u',\r\n      'i64.atomic.rmw16.and_u',\r\n      'i64.atomic.rmw16.or_u',\r\n      'i64.atomic.rmw16.xor_u',\r\n      'i64.atomic.rmw16.xchg_u',\r\n      'i64.atomic.rmw16.cmpxchg_u',\r\n      'i64.atomic.rmw32.add_u',\r\n      'i64.atomic.rmw32.sub_u',\r\n      'i64.atomic.rmw32.and_u',\r\n      'i64.atomic.rmw32.or_u',\r\n      'i64.atomic.rmw32.xor_u',\r\n      'i64.atomic.rmw32.xchg_u',\r\n      'i64.atomic.rmw32.cmpxchg_u',\r\n      'atomic.fence',\r\n      'func.bind',\r\n      'ref',\r\n      'ref.eq',\r\n      'ref.null',\r\n      'ref.is_null',\r\n      'ref.is_func',\r\n      'ref.is_data',\r\n      'ref.is_i31',\r\n      'ref.as_func',\r\n      'ref.as_non_null',\r\n      'ref.as_data',\r\n      'ref.as_i31',\r\n      'ref.func',\r\n      'ref.cast',\r\n      'ref.cast_static',\r\n      'ref.test',\r\n      'ref.test_static',\r\n      'table.get',\r\n      'table.set',\r\n      'table.size',\r\n      'table.grow',\r\n      'table.fill',\r\n      'table.init',\r\n      'table.copy',\r\n      'throw',\r\n      'rethrow',\r\n      'i32.load',\r\n      'i32.load8_s',\r\n      'i32.load8_u',\r\n      'i32.load16_s',\r\n      'i32.load16_u',\r\n      'i32.store',\r\n      'i32.store8',\r\n      'i32.store16',\r\n      'i32.const',\r\n      'i32.eqz',\r\n      'i32.eq',\r\n      'i32.ne',\r\n      'i32.lt_s',\r\n      'i32.lt_u',\r\n      'i32.le_s',\r\n      'i32.le_u',\r\n      'i32.gt_s',\r\n      'i32.gt_u',\r\n      'i32.ge_s',\r\n      'i32.ge_u',\r\n      'i32.clz',\r\n      'i32.ctz',\r\n      'i32.popcnt',\r\n      'i32.add',\r\n      'i32.sub',\r\n      'i32.mul',\r\n      'i32.div_s',\r\n      'i32.div_u',\r\n      'i32.rem_s',\r\n      'i32.rem_u',\r\n      'i32.and',\r\n      'i32.or',\r\n      'i32.xor',\r\n      'i32.shl',\r\n      'i32.shr_s',\r\n      'i32.shr_u',\r\n      'i32.rotl',\r\n      'i32.rotr',\r\n      'i32.wrap_i64',\r\n      'i32.trunc_f32_s',\r\n      'i32.trunc_f32_u',\r\n      'i32.trunc_f64_s',\r\n      'i32.trunc_f64_u',\r\n      'i32.reinterpret_f32',\r\n      'i64.load',\r\n      'i64.load8_s',\r\n      'i64.load8_u',\r\n      'i64.load16_s',\r\n      'i64.load16_u',\r\n      'i64.load32_s',\r\n      'i64.load32_u',\r\n      'i64.store',\r\n      'i64.store8',\r\n      'i64.store16',\r\n      'i64.store32',\r\n      'i64.const',\r\n      'i64.eqz',\r\n      'i64.eq',\r\n      'i64.ne',\r\n      'i64.lt_s',\r\n      'i64.lt_u',\r\n      'i64.le_s',\r\n      'i64.le_u',\r\n      'i64.gt_s',\r\n      'i64.gt_u',\r\n      'i64.ge_s',\r\n      'i64.ge_u',\r\n      'i64.clz',\r\n      'i64.ctz',\r\n      'i64.popcnt',\r\n      'i64.add',\r\n      'i64.sub',\r\n      'i64.mul',\r\n      'i64.div_s',\r\n      'i64.div_u',\r\n      'i64.rem_s',\r\n      'i64.rem_u',\r\n      'i64.and',\r\n      'i64.or',\r\n      'i64.xor',\r\n      'i64.shl',\r\n      'i64.shr_s',\r\n      'i64.shr_u',\r\n      'i64.rotl',\r\n      'i64.rotr',\r\n      'i64.extend_i32_s',\r\n      'i64.extend_i32_u',\r\n      'i64.trunc_f32_s',\r\n      'i64.trunc_f32_u',\r\n      'i64.trunc_f64_s',\r\n      'i64.trunc_f64_u',\r\n      'i64.reinterpret_f64',\r\n      'f32.load',\r\n      'f32.store',\r\n      'f32.const',\r\n      'f32.eq',\r\n      'f32.ne',\r\n      'f32.lt',\r\n      'f32.le',\r\n      'f32.gt',\r\n      'f32.ge',\r\n      'f32.abs',\r\n      'f32.neg',\r\n      'f32.ceil',\r\n      'f32.floor',\r\n      'f32.trunc',\r\n      'f32.nearest',\r\n      'f32.sqrt',\r\n      'f32.add',\r\n      'f32.sub',\r\n      'f32.mul',\r\n      'f32.div',\r\n      'f32.min',\r\n      'f32.max',\r\n      'f32.copysign',\r\n      'f32.convert_i32_s',\r\n      'f32.convert_i32_u',\r\n      'f32.convert_i64_s',\r\n      'f32.convert_i64_u',\r\n      'f32.demote_f64',\r\n      'f32.reinterpret_i32',\r\n      'f64.load',\r\n      'f64.store',\r\n      'f64.const',\r\n      'f64.eq',\r\n      'f64.ne',\r\n      'f64.lt',\r\n      'f64.le',\r\n      'f64.gt',\r\n      'f64.ge',\r\n      'f64.abs',\r\n      'f64.neg',\r\n      'f64.ceil',\r\n      'f64.floor',\r\n      'f64.trunc',\r\n      'f64.nearest',\r\n      'f64.sqrt',\r\n      'f64.add',\r\n      'f64.sub',\r\n      'f64.mul',\r\n      'f64.div',\r\n      'f64.min',\r\n      'f64.max',\r\n      'f64.copysign',\r\n      'f64.convert_i32_s',\r\n      'f64.convert_i32_u',\r\n      'f64.convert_i64_s',\r\n      'f64.convert_i64_u',\r\n      'f64.promote_f32',\r\n      'f64.reinterpret_i64',\r\n      'i32.extend8_s',\r\n      'i32.extend16_s',\r\n      'i64.extend8_s',\r\n      'i64.extend16_s',\r\n      'i64.extend32_s',\r\n      'i32.trunc_sat_f32_s',\r\n      'i32.trunc_sat_f32_u',\r\n      'i32.trunc_sat_f64_s',\r\n      'i32.trunc_sat_f64_u',\r\n      'i64.trunc_sat_f32_s',\r\n      'i64.trunc_sat_f32_u',\r\n      'i64.trunc_sat_f64_s',\r\n      'i64.trunc_sat_f64_u',\r\n      'memory.size',\r\n      'memory.grow',\r\n      'memory.copy',\r\n      'memory.fill',\r\n      'memory.init',\r\n      'memory.atomic.notify',\r\n      'memory.atomic.wait32',\r\n      'memory.atomic.wait64',\r\n      'i31.new',\r\n      'i31.get_u',\r\n      'i31.get_s',\r\n      'array.new',\r\n      'array.new_default',\r\n      'array.init',\r\n      'array.init_static',\r\n      'array.get',\r\n      'array.get_s',\r\n      'array.get_u',\r\n      'array.set',\r\n      'array.len',\r\n      'array.copy',\r\n      'struct.new',\r\n      'struct.new_default',\r\n      'struct.new_with_rtt',\r\n      'struct.new_default_with_rtt',\r\n      'struct.get',\r\n      'struct.get_s',\r\n      'struct.get_u',\r\n      'struct.set',\r\n      'rtt.canon',\r\n      'rtt.sub',\r\n      'rtt.fresh_sub',\r\n    ],\r\n    controlInstructions: [\r\n      'block',\r\n      'loop',\r\n      'if',\r\n      'else',\r\n      'then',\r\n      'end',\r\n      'do',\r\n      'let',\r\n      'br',\r\n      'br_if',\r\n      'br_table',\r\n      'br_on_exn',\r\n      'br_on_null',\r\n      'br_on_non_null',\r\n      'br_on_cast',\r\n      'br_on_cast_static',\r\n      'br_on_cast_fail',\r\n      'br_on_cast_static_fail',\r\n      'br_on_func',\r\n      'br_on_non_func',\r\n      'br_on_data',\r\n      'br_on_non_data',\r\n      'br_on_i31',\r\n      'br_on_non_i31',\r\n      'call',\r\n      'call_indirect',\r\n      'call_ref',\r\n      'return',\r\n      'return_call',\r\n      'return_call_indirect',\r\n      'return_call_ref',\r\n      'try',\r\n      'catch',\r\n      'catch_all',\r\n      'delegate',\r\n      'unreachable',\r\n    ],\r\n\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    digits: /\\d+(_+\\d+)*/,\r\n    octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n    binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n    hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n\r\n    tokenizer: {\r\n      root: [\r\n        // whitespace\r\n        { include: '@whitespace' },\r\n\r\n        // strings\r\n        [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'], // non-teminated string\r\n        [/\"/, 'string', '@string'],\r\n\r\n        // numbers (not all of these are generated, but here to be sure)\r\n        [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n        [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n        [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n        [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n        [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n        [/(@digits)[fFdD]/, 'number.float'],\r\n        [/(@digits)[lL]?/, 'number'],\r\n\r\n        // variable names\r\n        [/\\$[^\\s\\)]*/, { token: 'identifier' }],\r\n\r\n        // instructions and types\r\n        [\r\n          /[a-z0-9_]+(?:\\.[a-z0-9_]+)*/,\r\n          {\r\n            cases: {\r\n              '@types': { token: 'type.$0' },\r\n              '@keywords': { token: 'keyword.$0' },\r\n              '@controlInstructions': { token: 'controlInstruction.$0' },\r\n              '@instructions': { token: 'instruction.$0' },\r\n              '@default': 'identifier',\r\n            },\r\n          },\r\n        ],\r\n      ],\r\n\r\n      // eslint-disable-next-line id-blacklist\r\n      string: [\r\n        [/[^\\\\\"]+/, 'string'],\r\n        [/@escapes/, 'string.escape'],\r\n        [/\\\\./, 'string.escape.invalid'],\r\n        [/\"/, 'string', '@pop'],\r\n      ],\r\n\r\n      whitespace: [\r\n        [/[ \\t\\r\\n]+/, ''],\r\n        [/(;; )(ERROR |FAILURE )([^\\n]*)/, ['comment', 'error', '']],\r\n        [/(;; )(WARNING )([^\\n]*)/, ['comment', 'warning', '']],\r\n        [/(;; )(INFO )([^\\n]*)/, ['comment', 'info', '']],\r\n        [/(;; )(PEDANTIC )([^\\n]*)/, ['comment', 'pedantic', '']],\r\n        [/(;;  +)(~+|\\^)$/, ['comment', 'underline']],\r\n        [/(;;  )([^\\n]*)/, ['comment', '']],\r\n        [/;;[^\\n]*/, 'comment'],\r\n      ],\r\n    },\r\n  },\r\n};\r\n"],
  "mappings": "AAEA,IAAOA,EAAQ,CACb,OAAQ,CACN,SAAU,CACR,CAAC,IAAK,GAAG,EACT,CAAC,KAAM,KAAK,EACZ,CAAC,OAAQ,KAAK,EACd,CAAC,QAAS,KAAK,CACjB,EACA,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,KAAM,MAAO,KAAM,EAC3B,CAAE,KAAM,OAAQ,MAAO,KAAM,EAC7B,CAAE,KAAM,QAAS,MAAO,KAAM,CAChC,EACA,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,KAAM,MAAO,KAAM,EAC3B,CAAE,KAAM,OAAQ,MAAO,KAAM,EAC7B,CAAE,KAAM,QAAS,MAAO,KAAM,CAChC,CACF,EACA,OAAQ,CACN,SAAU,CACR,SACA,SACA,SACA,SACA,OACA,QACA,OACA,QACA,OACA,MACA,OACA,QACA,SACA,SACA,QACA,MACA,SACA,QACA,OACF,EACA,MAAO,CACL,KACA,MACA,MACA,MACA,MACA,MACA,OACA,SACA,QACA,SACA,UACA,YACA,UACA,SACA,SACA,OACA,MACA,IACF,EACA,aAAc,CACZ,MACA,MACA,OACA,YACA,YACA,YACA,YACA,YACA,aACA,aACA,aACA,gBACA,SACA,aACA,WACA,UACA,WACA,WACA,cACA,iBACA,YACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,mBACA,mBACA,aACA,mBACA,oBACA,oBACA,oBACA,gBACA,gBACA,gBACA,gBACA,cACA,eACA,qBACA,uBACA,uBACA,iBACA,YACA,YACA,kBACA,kBACA,YACA,kBACA,kBACA,YACA,YACA,YACA,cACA,cACA,WACA,WACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,cACA,cACA,cACA,cACA,eACA,uBACA,uBACA,gBACA,cACA,mBACA,mBACA,qBACA,uBACA,uBACA,2BACA,4BACA,2BACA,4BACA,iBACA,YACA,YACA,kBACA,kBACA,gCACA,gCACA,YACA,kBACA,kBACA,sBACA,YACA,2BACA,4BACA,2BACA,4BACA,YACA,YACA,cACA,cACA,WACA,WACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,cACA,cACA,cACA,cACA,eACA,uBACA,uBACA,gBACA,cACA,oBACA,oBACA,qBACA,qBACA,2BACA,4BACA,2BACA,4BACA,iBACA,YACA,YACA,gCACA,gCACA,YACA,YACA,2BACA,4BACA,2BACA,4BACA,YACA,YACA,cACA,cACA,WACA,WACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,cACA,cACA,cACA,cACA,0BACA,0BACA,+BACA,+BACA,oBACA,gBACA,cACA,mBACA,mBACA,qBACA,qBACA,2BACA,4BACA,2BACA,4BACA,iBACA,YACA,YACA,YACA,YACA,YACA,YACA,cACA,cACA,cACA,qBACA,qBACA,YACA,YACA,YACA,2BACA,4BACA,2BACA,4BACA,WACA,WACA,aACA,aACA,aACA,aACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,YACA,YACA,aACA,YACA,aACA,YACA,aACA,aACA,cACA,cACA,gBACA,0BACA,wBACA,wBACA,cACA,qBACA,qBACA,YACA,YACA,YACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,aACA,aACA,YACA,aACA,aACA,cACA,cACA,gBACA,0BACA,4BACA,4BACA,kBACA,qBACA,sBACA,mBACA,oBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,sBACA,yBACA,wBACA,wBACA,wBACA,uBACA,wBACA,yBACA,4BACA,yBACA,yBACA,yBACA,wBACA,yBACA,0BACA,6BACA,kBACA,qBACA,sBACA,sBACA,mBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,sBACA,yBACA,wBACA,wBACA,wBACA,uBACA,wBACA,yBACA,4BACA,yBACA,yBACA,yBACA,wBACA,yBACA,0BACA,6BACA,yBACA,yBACA,yBACA,wBACA,yBACA,0BACA,6BACA,eACA,YACA,MACA,SACA,WACA,cACA,cACA,cACA,aACA,cACA,kBACA,cACA,aACA,WACA,WACA,kBACA,WACA,kBACA,YACA,YACA,aACA,aACA,aACA,aACA,aACA,QACA,UACA,WACA,cACA,cACA,eACA,eACA,YACA,aACA,cACA,YACA,UACA,SACA,SACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,aACA,UACA,UACA,UACA,YACA,YACA,YACA,YACA,UACA,SACA,UACA,UACA,YACA,YACA,WACA,WACA,eACA,kBACA,kBACA,kBACA,kBACA,sBACA,WACA,cACA,cACA,eACA,eACA,eACA,eACA,YACA,aACA,cACA,cACA,YACA,UACA,SACA,SACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,aACA,UACA,UACA,UACA,YACA,YACA,YACA,YACA,UACA,SACA,UACA,UACA,YACA,YACA,WACA,WACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,sBACA,WACA,YACA,YACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,WACA,YACA,YACA,cACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,eACA,oBACA,oBACA,oBACA,oBACA,iBACA,sBACA,WACA,YACA,YACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,WACA,YACA,YACA,cACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,eACA,oBACA,oBACA,oBACA,oBACA,kBACA,sBACA,gBACA,iBACA,gBACA,iBACA,iBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,cACA,cACA,cACA,cACA,cACA,uBACA,uBACA,uBACA,UACA,YACA,YACA,YACA,oBACA,aACA,oBACA,YACA,cACA,cACA,YACA,YACA,aACA,aACA,qBACA,sBACA,8BACA,aACA,eACA,eACA,aACA,YACA,UACA,eACF,EACA,oBAAqB,CACnB,QACA,OACA,KACA,OACA,OACA,MACA,KACA,MACA,KACA,QACA,WACA,YACA,aACA,iBACA,aACA,oBACA,kBACA,yBACA,aACA,iBACA,aACA,iBACA,YACA,gBACA,OACA,gBACA,WACA,SACA,cACA,uBACA,kBACA,MACA,QACA,YACA,WACA,aACF,EAEA,QAAS,wEACT,OAAQ,cACR,YAAa,oBACb,aAAc,oBACd,UAAW,iCAEX,UAAW,CACT,KAAM,CAEJ,CAAE,QAAS,aAAc,EAGzB,CAAC,kBAAmB,gBAAgB,EACpC,CAAC,IAAK,SAAU,SAAS,EAGzB,CAAC,yCAA0C,cAAc,EACzD,CAAC,oDAAqD,cAAc,EACpE,CAAC,yBAA0B,YAAY,EACvC,CAAC,uBAAwB,cAAc,EACvC,CAAC,4BAA6B,eAAe,EAC7C,CAAC,kBAAmB,cAAc,EAClC,CAAC,iBAAkB,QAAQ,EAG3B,CAAC,aAAc,CAAE,MAAO,YAAa,CAAC,EAGtC,CACE,8BACA,CACE,MAAO,CACL,SAAU,CAAE,MAAO,SAAU,EAC7B,YAAa,CAAE,MAAO,YAAa,EACnC,uBAAwB,CAAE,MAAO,uBAAwB,EACzD,gBAAiB,CAAE,MAAO,gBAAiB,EAC3C,WAAY,YACd,CACF,CACF,CACF,EAGA,OAAQ,CACN,CAAC,UAAW,QAAQ,EACpB,CAAC,WAAY,eAAe,EAC5B,CAAC,MAAO,uBAAuB,EAC/B,CAAC,IAAK,SAAU,MAAM,CACxB,EAEA,WAAY,CACV,CAAC,aAAc,EAAE,EACjB,CAAC,iCAAkC,CAAC,UAAW,QAAS,EAAE,CAAC,EAC3D,CAAC,0BAA2B,CAAC,UAAW,UAAW,EAAE,CAAC,EACtD,CAAC,uBAAwB,CAAC,UAAW,OAAQ,EAAE,CAAC,EAChD,CAAC,2BAA4B,CAAC,UAAW,WAAY,EAAE,CAAC,EACxD,CAAC,kBAAmB,CAAC,UAAW,WAAW,CAAC,EAC5C,CAAC,iBAAkB,CAAC,UAAW,EAAE,CAAC,EAClC,CAAC,WAAY,SAAS,CACxB,CACF,CACF,CACF",
  "names": ["monaco_lang_wat_default"]
}
